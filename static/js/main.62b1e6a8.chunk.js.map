{"version":3,"sources":["api/goods.ts","components/GoodsList/index.ts","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","a","fetch","response","json","get5First","goods","sort","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","React","memo","map","style","id","App","useState","setGoods","isLoading","setLoading","clickHandler","goodsGetter","length","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"+OAGaA,G,MAAM,uCAAG,4BAAAC,EAAA,sEACGC,MAHZ,yEAES,cACdC,EADc,yBAGbA,EAASC,QAHI,2CAAH,sDAMNC,EAAS,uCAAG,4BAAAJ,EAAA,sEACHD,IADG,cACjBM,EADiB,QAGjBC,MAAK,SAACN,EAAGO,GAAJ,OAAUP,EAAEQ,KAAKC,cAAcF,EAAEC,SAHrB,kBAKhBH,EAAMK,MAAM,EAAG,IALC,2CAAH,qDAQTC,EAAW,uCAAG,4BAAAX,EAAA,sEACLD,IADK,cACnBM,EADmB,yBAGlBA,EAAMO,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,UAHR,2CAAH,qD,OCfTC,ECI2BC,IAAMC,MAAK,gBAAGZ,EAAH,EAAGA,MAAH,OACnD,6BACGA,EAAMa,KAAI,SAAAL,GAAI,OACb,oBAEEM,MAAO,CAAEL,MAAOD,EAAKC,OAFvB,SAIGD,EAAKL,MAHDK,EAAKO,YCoCHC,EAxCO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,uCAAG,WAAOC,GAAP,SAAA3B,EAAA,6DACnByB,GAAW,GADQ,KAEnBF,EAFmB,SAEJI,IAFI,kCAGnBF,GAAW,GAHQ,2CAAH,sDAMlB,OACE,qCACE,uDAECD,EACG,2CACAnB,EAAMuB,OAAS,GAAK,cAAC,EAAD,CAAiBvB,UAEzC,wBACEwB,KAAK,SACLC,QAAS,kBAAMJ,EAAa3B,IAF9B,sBAMA,wBACE8B,KAAK,SACLC,QAAS,kBAAMJ,EAAatB,IAF9B,0BAMA,wBACEyB,KAAK,SACLC,QAAS,kBAAMJ,EAAaf,IAF9B,0BCjCNoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.62b1e6a8.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = async (): Promise<Good[]> => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n};\n\nexport const get5First = async (): Promise<Good[]> => {\n  const goods = await getAll();\n\n  goods.sort((a, b) => a.name.localeCompare(b.name));\n\n  return goods.slice(0, 5);\n};\n\nexport const getRedGoods = async (): Promise<Good[]> => {\n  const goods = await getAll();\n\n  return goods.filter(good => good.color === 'red');\n};\n","import { GoodsList } from './GoodsList';\n\nexport default GoodsList;\n","import React from 'react';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport GoodsList from './components/GoodsList';\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const clickHandler = async (goodsGetter: () => Promise<Good[]>) => {\n    setLoading(true);\n    setGoods(await goodsGetter());\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n\n      {isLoading\n        ? <p>Loading...</p>\n        : goods.length > 0 && <GoodsList {...{ goods }} />}\n\n      <button\n        type=\"button\"\n        onClick={() => clickHandler(getAll)}\n      >\n        Load all\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => clickHandler(get5First)}\n      >\n        Load first 5\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => clickHandler(getRedGoods)}\n      >\n        Load red\n      </button>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}